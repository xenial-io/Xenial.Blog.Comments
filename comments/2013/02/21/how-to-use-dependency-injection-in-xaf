{
  "Id": "2013/02/21/how-to-use-dependency-injection-in-xaf",
  "Comments": [
    {
      "Id": "9SYxvp4ISPj0sEQHpAegPSfznxkPPyEtVkSt5dpADPA",
      "Name": "Petre",
      "GithubOrEmail": null,
      "Homepage": null,
      "Content": "Hello Manuel,\n\nI've been thinking of injecting dependencies into XPO objects and XAF Controllers and came across your blog.\n\nIt seems like you are making the container available to business objects? I believe it is a service locator anti-pattern.\n\nI'm suggesting that you rework the solution by introducing dependencies in your classes, as opposed to having _container.Resolve calls, preferably initialized in a constructor (along with Session) or as injectable properties, and build the object graph in the Composition Root, i.e. at application startup.\n\nTake a look at the following: [ServiceLocatorisanAnti-Pattern](https://blog.ploeh.dk/2010/02/03/ServiceLocatorisanAnti-Pattern/) [CompositionRoot](https://blog.ploeh.dk/2011/07/28/CompositionRoot/)\n\nThanks. Petre",
      "Date": "2015-09-03T08:45:44.298343+02:00",
      "AvatarUrl": null,
      "Comments": [
        {
          "Id": "k5lI-RWW368FoWnNEYfrgQKMeaHL1cBSdgzfcuKjKMo",
          "Name": "Stefan",
          "GithubOrEmail": null,
          "Homepage": null,
          "Content": "Don't worry Petre, XAF is one giant anti-pattern, so one more small one won't hurt!  7 years on from this blog, and it STILL doesn't support this",
          "Date": "2022-09-02T00:25:12.5767207+02:00",
          "AvatarUrl": null,
          "Comments": []
        },
        {
          "Id": "9obT7Ah9GZ2DpoZdzE2HQjQHavJEjh90eh5C5PA4AvI",
          "Name": "Manuel Grundner",
          "GithubOrEmail": null,
          "Homepage": "https://blog.delegate.at",
          "Content": "They made progress on this with Blazor, but there is a long way to go, without breaking the whole existing user base.",
          "Date": "2022-09-02T07:21:07.1599008+02:00",
          "AvatarUrl": "https://avatars.githubusercontent.com/u/653905?v=4",
          "Comments": []
        }
      ]
    },
    {
      "Id": "Uv9jWmoI8pYSNs2oBhDx9aDiY6-CCgDG1kJ78rfL2d0",
      "Name": "Manuel Grundner",
      "GithubOrEmail": null,
      "Homepage": "https://blog.delegate.at",
      "Content": "Hi Petre,\n\nyou are absolute right. It IS an antipattern, but you can't control the creation of XPO Objects no'r XAF Controllers. There isn't event a point where you can do properly do Property or Method injection.\n\nThe main reason we use this in XPO Objects is to use some services like logging or Object initializers (AfterConstruction) from client specific assemblies/modules. Of course there are other patterns (EventAggregators, Messaging for example) that can handle this kind of problems, but at the time we didn't know how we can keep track of the objectspace scope.\n\nCause the fact that the lifetime of objects is controlled by XAF & XPO we didn't find a better way to do this.",
      "Date": "2016-02-03T07:43:42.2314224+01:00",
      "AvatarUrl": "https://avatars3.githubusercontent.com/u/653905?v=4",
      "Comments": []
    },
    {
      "Id": "U0IxhKVU_dX8FxA_cse8zu_S9BqNLQAJRGhXY_Raf7U",
      "Name": "Dennis Garavsky",
      "GithubOrEmail": null,
      "Homepage": null,
      "Content": "XAF v23.1 supports the dependency injection mechanism in Controllers and entity classes natively in .NET 6+ apps (WinForms, Blazor, and Web API Service).\n\n*   [Dependency Injection in Controllers](https://docs.devexpress.com/eXpressAppFramework/404402/application-shell-and-base-infrastructure/dependency-injection-in-xaf-applications/dependency-injection-in-controllers?v=23.1)\n*   [Write Business Object Code that Accesses Services (Use Session or IObjectSpace)](https://docs.devexpress.com/eXpressAppFramework/404403/application-shell-and-base-infrastructure/dependency-injection-in-xaf-applications/access-services-in-business-objects-session-and-i-object-space?v=23.1)\n*   [Implementation Of Dependency Injection Support in Existing Applications](https://docs.devexpress.com/eXpressAppFramework/404404/application-shell-and-base-infrastructure/dependency-injection-in-xaf-applications/implementation-of-dependency-injection-support-in-existing-applications?v=23.1)\n\nThat said, a custom solution from this blog post may no longer be needed.",
      "Date": "2023-05-22T23:44:06.0678413+02:00",
      "AvatarUrl": null,
      "Comments": []
    }
  ]
}